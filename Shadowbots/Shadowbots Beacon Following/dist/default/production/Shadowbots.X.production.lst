

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Tue Jan 17 11:51:38 2023

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	18F2221
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    10                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    11                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    13  0000                     
    14                           ; Version 2.40
    15                           ; Generated 17/11/2021 GMT
    16                           ; 
    17                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    18                           ; All rights reserved.
    19                           ; 
    20                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    21                           ; 
    22                           ; Redistribution and use in source and binary forms, with or without modification, are
    23                           ; permitted provided that the following conditions are met:
    24                           ; 
    25                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    26                           ;        conditions and the following disclaimer.
    27                           ; 
    28                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    29                           ;        of conditions and the following disclaimer in the documentation and/or other
    30                           ;        materials provided with the distribution. Publication is not required when
    31                           ;        this file is used in an embedded application.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC18F2221 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     _LATBbits	set	3978
    50  0000                     _PORTCbits	set	3970
    51  0000                     _LATB	set	3978
    52  0000                     _TRISA	set	3986
    53  0000                     _CCP2CON	set	4026
    54  0000                     _CCP1CON	set	4029
    55  0000                     _T2CON	set	4042
    56  0000                     _PR2	set	4043
    57  0000                     _TRISC	set	3988
    58  0000                     _TRISB	set	3987
    59  0000                     _CCPR1L	set	4030
    60  0000                     _ADCON2	set	4032
    61  0000                     _ADCON1	set	4033
    62  0000                     _CCPR2L	set	4027
    63  0000                     _LATAbits	set	3977
    64                           
    65                           ; #config settings
    66                           
    67                           	psect	cinit
    68  000F0E                     __pcinit:
    69                           	callstack 0
    70  000F0E                     start_initialization:
    71                           	callstack 0
    72  000F0E                     __initialization:
    73                           	callstack 0
    74  000F0E                     end_of_initialization:
    75                           	callstack 0
    76  000F0E                     __end_of__initialization:
    77                           	callstack 0
    78  000F0E  0100               	movlb	0
    79  000F10  EFAA  F007         	goto	_main	;jump to C main() function
    80                           
    81                           	psect	cstackCOMRAM
    82  000001                     __pcstackCOMRAM:
    83                           	callstack 0
    84  000001                     wait10ms@del:
    85                           	callstack 0
    86                           
    87                           ; 2 bytes @ 0x0
    88  000001                     	ds	2
    89  000003                     ??_wait10ms:
    90                           
    91                           ; 1 bytes @ 0x2
    92  000003                     	ds	1
    93  000004                     wait10ms@c:
    94                           	callstack 0
    95                           
    96                           ; 2 bytes @ 0x3
    97  000004                     	ds	2
    98  000006                     ??_main:
    99                           
   100                           ; 1 bytes @ 0x5
   101  000006                     	ds	1
   102  000007                     main@i:
   103                           	callstack 0
   104                           
   105                           ; 2 bytes @ 0x6
   106  000007                     	ds	2
   107  000009                     main@encoderLeft:
   108                           	callstack 0
   109                           
   110                           ; 2 bytes @ 0x8
   111  000009                     	ds	2
   112  00000B                     main@sumL:
   113                           	callstack 0
   114                           
   115                           ; 2 bytes @ 0xA
   116  00000B                     	ds	2
   117                           
   118 ;;
   119 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   120 ;;
   121 ;; *************** function _main *****************
   122 ;; Defined at:
   123 ;;		line 25 in file "encoder.c"
   124 ;; Parameters:    Size  Location     Type
   125 ;;		None
   126 ;; Auto vars:     Size  Location     Type
   127 ;;  sumL            2   10[COMRAM] int 
   128 ;;  encoderLeft     2    8[COMRAM] int 
   129 ;;  encoderRight    2    0        int 
   130 ;;  i               2    6[COMRAM] int 
   131 ;;  sumR            2    0        int 
   132 ;;  markspace       1    0        unsigned char 
   133 ;; Return value:  Size  Location     Type
   134 ;;                  1    wreg      void 
   135 ;; Registers used:
   136 ;;		wreg, status,2, status,0, cstack
   137 ;; Tracked objects:
   138 ;;		On entry : 0/0
   139 ;;		On exit  : 0/0
   140 ;;		Unchanged: 0/0
   141 ;; Data sizes:     COMRAM   BANK0   BANK1
   142 ;;      Params:         0       0       0
   143 ;;      Locals:         6       0       0
   144 ;;      Temps:          1       0       0
   145 ;;      Totals:         7       0       0
   146 ;;Total ram usage:        7 bytes
   147 ;; Hardware stack levels required when called: 1
   148 ;; This function calls:
   149 ;;		_wait10ms
   150 ;; This function is called by:
   151 ;;		Startup code after reset
   152 ;; This function uses a non-reentrant model
   153 ;;
   154                           
   155                           	psect	text0
   156  000F54                     __ptext0:
   157                           	callstack 0
   158  000F54                     _main:
   159                           	callstack 30
   160  000F54                     
   161                           ;encoder.c: 27:     int i = 1;
   162  000F54  0ECF               	movlw	207
   163  000F56  6E92               	movwf	146,c	;volatile
   164                           
   165                           ;encoder.c: 28:     while(1){
   166  000F58  0EC0               	movlw	192
   167  000F5A  6E93               	movwf	147,c	;volatile
   168                           
   169                           ;encoder.c: 29:         encoderRight = PORTCbits.RC5;
   170  000F5C  0ED8               	movlw	216
   171  000F5E  6E94               	movwf	148,c	;volatile
   172  000F60                     
   173                           ;encoder.c: 30:         encoderLeft = PORTCbits.RC0;
   174  000F60  68CB               	setf	203,c	;volatile
   175                           
   176                           ;encoder.c: 31:         LATBbits.LATB0 = 0;
   177  000F62  0E07               	movlw	7
   178  000F64  6ECA               	movwf	202,c	;volatile
   179                           
   180                           ;encoder.c: 32:         LATBbits.LATB1 = 1;
   181  000F66  0E0C               	movlw	12
   182  000F68  6EBD               	movwf	189,c	;volatile
   183                           
   184                           ;encoder.c: 33:         LATAbits.LATA4 = 0;
   185  000F6A  0E0C               	movlw	12
   186  000F6C  6EBA               	movwf	186,c	;volatile
   187                           
   188                           ;encoder.c: 34:         LATAbits.LATA5 = 1;
   189  000F6E  0E0D               	movlw	13
   190  000F70  6EC1               	movwf	193,c	;volatile
   191                           
   192                           ;encoder.c: 35:         if(encoderLeft == 1){
   193  000F72  0E82               	movlw	130
   194  000F74  6EC0               	movwf	192,c	;volatile
   195  000F76                     
   196                           ;encoder.c: 36:             sumL++;}
   197  000F76  0E64               	movlw	100
   198  000F78  6EBE               	movwf	190,c	;volatile
   199  000F7A                     
   200                           ;encoder.c: 37:         if(sumL == 5){
   201  000F7A  0E64               	movlw	100
   202  000F7C  6EBB               	movwf	187,c	;volatile
   203                           
   204                           ;encoder.c: 38:             LATBbits.LATB0 = 0;
   205  000F7E  0E00               	movlw	0
   206  000F80  6E8A               	movwf	138,c	;volatile
   207  000F82  5082               	movf	130,w,c	;volatile
   208  000F84  5082               	movf	130,w,c	;volatile
   209                           
   210                           ;encoder.c: 42:             wait10ms(100);
   211  000F86  0E00               	movlw	0
   212  000F88  6E0C               	movwf	(main@sumL+1)^0,c
   213  000F8A  0E01               	movlw	1
   214  000F8C  6E0B               	movwf	main@sumL^0,c
   215                           
   216                           ;encoder.c: 43:         }
   217  000F8E  0E00               	movlw	0
   218  000F90  6E08               	movwf	(main@i+1)^0,c
   219  000F92  0E01               	movlw	1
   220  000F94  6E07               	movwf	main@i^0,c
   221  000F96                     l39:
   222  000F96  5082               	movf	130,w,c	;volatile
   223                           
   224                           ;encoder.c: 46: }
   225  000F98  B082               	btfsc	130,0,c	;volatile
   226  000F9A  EFD1  F007         	goto	u61
   227  000F9E  EFD5  F007         	goto	u60
   228  000FA2                     u61:
   229  000FA2  6A06               	clrf	??_main^0,c
   230  000FA4  2A06               	incf	??_main^0,f,c
   231  000FA6  EFD6  F007         	goto	u68
   232  000FAA                     u60:
   233  000FAA  6A06               	clrf	??_main^0,c
   234  000FAC                     u68:
   235  000FAC  5006               	movf	??_main^0,w,c
   236  000FAE  6E09               	movwf	main@encoderLeft^0,c
   237  000FB0  6A0A               	clrf	(main@encoderLeft+1)^0,c
   238  000FB2                     
   239                           ;encoder.c: 47: void wait10ms(int del){
   240  000FB2  908A               	bcf	138,0,c	;volatile
   241  000FB4                     
   242                           ;encoder.c: 48:  int c;
   243  000FB4  828A               	bsf	138,1,c	;volatile
   244  000FB6                     
   245                           ;encoder.c: 49:  for(c=0;c<del;c++)
   246  000FB6  9889               	bcf	137,4,c	;volatile
   247  000FB8                     
   248                           ;encoder.c: 50:      _delay((unsigned long)((10)*(10000000/4000.0)));
   249  000FB8  8A89               	bsf	137,5,c	;volatile
   250  000FBA                     
   251                           ;encoder.c: 51:  return;
   252  000FBA  0409               	decf	main@encoderLeft^0,w,c
   253  000FBC  100A               	iorwf	(main@encoderLeft+1)^0,w,c
   254  000FBE  A4D8               	btfss	status,2,c
   255  000FC0  EFE4  F007         	goto	u71
   256  000FC4  EFE6  F007         	goto	u70
   257  000FC8                     u71:
   258  000FC8  EFE8  F007         	goto	l784
   259  000FCC                     u70:
   260  000FCC                     
   261                           ;encoder.c: 52: }
   262  000FCC  4A0B               	infsnz	main@sumL^0,f,c
   263  000FCE  2A0C               	incf	(main@sumL+1)^0,f,c
   264  000FD0                     l784:
   265  000FD0  0E05               	movlw	5
   266  000FD2  180B               	xorwf	main@sumL^0,w,c
   267  000FD4  100C               	iorwf	(main@sumL+1)^0,w,c
   268  000FD6  A4D8               	btfss	status,2,c
   269  000FD8  EFF0  F007         	goto	u81
   270  000FDC  EFF2  F007         	goto	u80
   271  000FE0                     u81:
   272  000FE0  EFCB  F007         	goto	l39
   273  000FE4                     u80:
   274  000FE4  908A               	bcf	138,0,c	;volatile
   275  000FE6  928A               	bcf	138,1,c	;volatile
   276  000FE8  9889               	bcf	137,4,c	;volatile
   277  000FEA  9A89               	bcf	137,5,c	;volatile
   278  000FEC  0E00               	movlw	0
   279  000FEE  6E02               	movwf	(wait10ms@del+1)^0,c
   280  000FF0  0E64               	movlw	100
   281  000FF2  6E01               	movwf	wait10ms@del^0,c
   282  000FF4  EC8A  F007         	call	_wait10ms	;wreg free
   283  000FF8  EFCB  F007         	goto	l39
   284  000FFC  EF00  F000         	goto	start
   285  001000                     __end_of_main:
   286                           	callstack 0
   287                           
   288 ;; *************** function _wait10ms *****************
   289 ;; Defined at:
   290 ;;		line 63 in file "encoder.c"
   291 ;; Parameters:    Size  Location     Type
   292 ;;  del             2    0[COMRAM] int 
   293 ;; Auto vars:     Size  Location     Type
   294 ;;  c               2    3[COMRAM] int 
   295 ;; Return value:  Size  Location     Type
   296 ;;                  1    wreg      void 
   297 ;; Registers used:
   298 ;;		wreg, status,2, status,0
   299 ;; Tracked objects:
   300 ;;		On entry : 0/0
   301 ;;		On exit  : 0/0
   302 ;;		Unchanged: 0/0
   303 ;; Data sizes:     COMRAM   BANK0   BANK1
   304 ;;      Params:         2       0       0
   305 ;;      Locals:         2       0       0
   306 ;;      Temps:          1       0       0
   307 ;;      Totals:         5       0       0
   308 ;;Total ram usage:        5 bytes
   309 ;; Hardware stack levels used: 1
   310 ;; This function calls:
   311 ;;		Nothing
   312 ;; This function is called by:
   313 ;;		_main
   314 ;; This function uses a non-reentrant model
   315 ;;
   316                           
   317                           	psect	text1
   318  000F14                     __ptext1:
   319                           	callstack 0
   320  000F14                     _wait10ms:
   321                           	callstack 30
   322  000F14  0E00               	movlw	0
   323  000F16  6E05               	movwf	(wait10ms@c+1)^0,c
   324  000F18  0E00               	movlw	0
   325  000F1A  6E04               	movwf	wait10ms@c^0,c
   326  000F1C  EF9A  F007         	goto	l47
   327  000F20                     l760:
   328  000F20  0E21               	movlw	33
   329  000F22  6E03               	movwf	??_wait10ms^0,c
   330  000F24  0E76               	movlw	118
   331  000F26                     u97:
   332  000F26  2EE8               	decfsz	wreg,f,c
   333  000F28  D7FE               	bra	u97
   334  000F2A  2E03               	decfsz	??_wait10ms^0,f,c
   335  000F2C  D7FC               	bra	u97
   336  000F2E  D000               	nop2	
   337  000F30  4A04               	infsnz	wait10ms@c^0,f,c
   338  000F32  2A05               	incf	(wait10ms@c+1)^0,f,c
   339  000F34                     l47:
   340  000F34  5001               	movf	wait10ms@del^0,w,c
   341  000F36  5C04               	subwf	wait10ms@c^0,w,c
   342  000F38  5005               	movf	(wait10ms@c+1)^0,w,c
   343  000F3A  0A80               	xorlw	128
   344  000F3C  6E03               	movwf	??_wait10ms^0,c
   345  000F3E  5002               	movf	(wait10ms@del+1)^0,w,c
   346  000F40  0A80               	xorlw	128
   347  000F42  5803               	subwfb	??_wait10ms^0,w,c
   348  000F44  A0D8               	btfss	status,0,c
   349  000F46  EFA7  F007         	goto	u51
   350  000F4A  EFA9  F007         	goto	u50
   351  000F4E                     u51:
   352  000F4E  EF90  F007         	goto	l760
   353  000F52                     u50:
   354  000F52  0012               	return		;funcret
   355  000F54                     __end_of_wait10ms:
   356                           	callstack 0
   357  0000                     
   358                           	psect	rparam
   359  0000                     
   360                           	psect	idloc
   361                           
   362                           ;Config register IDLOC0 @ 0x200000
   363                           ;	unspecified, using default values
   364  200000                     	org	2097152
   365  200000  FF                 	db	255
   366                           
   367                           ;Config register IDLOC1 @ 0x200001
   368                           ;	unspecified, using default values
   369  200001                     	org	2097153
   370  200001  FF                 	db	255
   371                           
   372                           ;Config register IDLOC2 @ 0x200002
   373                           ;	unspecified, using default values
   374  200002                     	org	2097154
   375  200002  FF                 	db	255
   376                           
   377                           ;Config register IDLOC3 @ 0x200003
   378                           ;	unspecified, using default values
   379  200003                     	org	2097155
   380  200003  FF                 	db	255
   381                           
   382                           ;Config register IDLOC4 @ 0x200004
   383                           ;	unspecified, using default values
   384  200004                     	org	2097156
   385  200004  FF                 	db	255
   386                           
   387                           ;Config register IDLOC5 @ 0x200005
   388                           ;	unspecified, using default values
   389  200005                     	org	2097157
   390  200005  FF                 	db	255
   391                           
   392                           ;Config register IDLOC6 @ 0x200006
   393                           ;	unspecified, using default values
   394  200006                     	org	2097158
   395  200006  FF                 	db	255
   396                           
   397                           ;Config register IDLOC7 @ 0x200007
   398                           ;	unspecified, using default values
   399  200007                     	org	2097159
   400  200007  FF                 	db	255
   401                           
   402                           	psect	config
   403                           
   404                           ; Padding undefined space
   405  300000                     	org	3145728
   406  300000  FF                 	db	255
   407                           
   408                           ;Config register CONFIG1H @ 0x300001
   409                           ;	Oscillator
   410                           ;	OSC = HS, HS Oscillator
   411                           ;	Fail-Safe Clock Monitor Enable bit
   412                           ;	FCMEN = 0x0, unprogrammed default
   413                           ;	Internal/External Oscillator Switchover bit
   414                           ;	IESO = 0x0, unprogrammed default
   415  300001                     	org	3145729
   416  300001  02                 	db	2
   417                           
   418                           ;Config register CONFIG2L @ 0x300002
   419                           ;	Power-up Timer Enable bit
   420                           ;	PWRT = ON, PWRT enabled
   421                           ;	Brown-out Reset Enable bits
   422                           ;	BOR = 0x3, unprogrammed default
   423                           ;	Brown-out Reset Voltage bits
   424                           ;	BORV = 0x3, unprogrammed default
   425  300002                     	org	3145730
   426  300002  1E                 	db	30
   427                           
   428                           ;Config register CONFIG2H @ 0x300003
   429                           ;	Watchdog Timer Enable bit
   430                           ;	WDT = OFF, WDT disabled (control is placed on the SWDTEN bit)
   431                           ;	Watchdog Timer Postscale Select bits
   432                           ;	WDTPS = 0xF, unprogrammed default
   433  300003                     	org	3145731
   434  300003  1E                 	db	30
   435                           
   436                           ; Padding undefined space
   437  300004                     	org	3145732
   438  300004  FF                 	db	255
   439                           
   440                           ;Config register CONFIG3H @ 0x300005
   441                           ;	unspecified, using default values
   442                           ;	CCP2 MUX bit
   443                           ;	CCP2MX = 0x1, unprogrammed default
   444                           ;	PORTB A/D Enable bit
   445                           ;	PBADEN = 0x1, unprogrammed default
   446                           ;	Low-Power Timer1 Oscillator Enable bit
   447                           ;	LPT1OSC = 0x0, unprogrammed default
   448                           ;	MCLR Pin Enable bit
   449                           ;	MCLRE = 0x1, unprogrammed default
   450  300005                     	org	3145733
   451  300005  83                 	db	131
   452                           
   453                           ;Config register CONFIG4L @ 0x300006
   454                           ;	Stack Full/Underflow Reset Enable bit
   455                           ;	STVREN = 0x1, unprogrammed default
   456                           ;	Single-Supply ICSP Enable bit
   457                           ;	LVP = OFF, Single-Supply ICSP disabled
   458                           ;	Boot Block Size Select bits
   459                           ;	BBSIZ = 0x0, unprogrammed default
   460                           ;	Extended Instruction Set Enable bit
   461                           ;	XINST = 0x0, unprogrammed default
   462                           ;	Background Debugger Enable bit
   463                           ;	DEBUG = 0x1, unprogrammed default
   464  300006                     	org	3145734
   465  300006  81                 	db	129
   466                           
   467                           ; Padding undefined space
   468  300007                     	org	3145735
   469  300007  FF                 	db	255
   470                           
   471                           ;Config register CONFIG5L @ 0x300008
   472                           ;	unspecified, using default values
   473                           ;	Code Protection bit
   474                           ;	CP0 = 0x1, unprogrammed default
   475                           ;	Code Protection bit
   476                           ;	CP1 = 0x1, unprogrammed default
   477  300008                     	org	3145736
   478  300008  03                 	db	3
   479                           
   480                           ;Config register CONFIG5H @ 0x300009
   481                           ;	unspecified, using default values
   482                           ;	Boot Block Code Protection bitProtect Boot
   483                           ;	CPB = 0x1, unprogrammed default
   484                           ;	Data EEPROM Code Protection bit
   485                           ;	CPD = 0x1, unprogrammed default
   486  300009                     	org	3145737
   487  300009  C0                 	db	192
   488                           
   489                           ;Config register CONFIG6L @ 0x30000A
   490                           ;	unspecified, using default values
   491                           ;	Write Protection bit
   492                           ;	WRT0 = 0x1, unprogrammed default
   493                           ;	Write Protection bit
   494                           ;	WRT1 = 0x1, unprogrammed default
   495  30000A                     	org	3145738
   496  30000A  03                 	db	3
   497                           
   498                           ;Config register CONFIG6H @ 0x30000B
   499                           ;	unspecified, using default values
   500                           ;	Configuration Register Write Protection bit
   501                           ;	WRTC = 0x1, unprogrammed default
   502                           ;	Boot Block Write Protection bit
   503                           ;	WRTB = 0x1, unprogrammed default
   504                           ;	Data EEPROM Write Protection bit
   505                           ;	WRTD = 0x1, unprogrammed default
   506  30000B                     	org	3145739
   507  30000B  E0                 	db	224
   508                           
   509                           ;Config register CONFIG7L @ 0x30000C
   510                           ;	unspecified, using default values
   511                           ;	Table Read Protection bit
   512                           ;	EBTR0 = 0x1, unprogrammed default
   513                           ;	Table Read Protection bit
   514                           ;	EBTR1 = 0x1, unprogrammed default
   515  30000C                     	org	3145740
   516  30000C  03                 	db	3
   517                           
   518                           ;Config register CONFIG7H @ 0x30000D
   519                           ;	unspecified, using default values
   520                           ;	Boot Block Table Read Protection bit
   521                           ;	EBTRB = 0x1, unprogrammed default
   522  30000D                     	org	3145741
   523  30000D  40                 	db	64
   524                           tosu	equ	0xFFF
   525                           tosh	equ	0xFFE
   526                           tosl	equ	0xFFD
   527                           stkptr	equ	0xFFC
   528                           pclatu	equ	0xFFB
   529                           pclath	equ	0xFFA
   530                           pcl	equ	0xFF9
   531                           tblptru	equ	0xFF8
   532                           tblptrh	equ	0xFF7
   533                           tblptrl	equ	0xFF6
   534                           tablat	equ	0xFF5
   535                           prodh	equ	0xFF4
   536                           prodl	equ	0xFF3
   537                           indf0	equ	0xFEF
   538                           postinc0	equ	0xFEE
   539                           postdec0	equ	0xFED
   540                           preinc0	equ	0xFEC
   541                           plusw0	equ	0xFEB
   542                           fsr0h	equ	0xFEA
   543                           fsr0l	equ	0xFE9
   544                           wreg	equ	0xFE8
   545                           indf1	equ	0xFE7
   546                           postinc1	equ	0xFE6
   547                           postdec1	equ	0xFE5
   548                           preinc1	equ	0xFE4
   549                           plusw1	equ	0xFE3
   550                           fsr1h	equ	0xFE2
   551                           fsr1l	equ	0xFE1
   552                           bsr	equ	0xFE0
   553                           indf2	equ	0xFDF
   554                           postinc2	equ	0xFDE
   555                           postdec2	equ	0xFDD
   556                           preinc2	equ	0xFDC
   557                           plusw2	equ	0xFDB
   558                           fsr2h	equ	0xFDA
   559                           fsr2l	equ	0xFD9
   560                           status	equ	0xFD8

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     12      12
    BANK0           128      0       0
    BANK1           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_wait10ms

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                12    12      0     219
                                              5 COMRAM     7     7      0
                           _wait10ms
 ---------------------------------------------------------------------------------
 (1) _wait10ms                                             5     3      2     122
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _wait10ms

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           7F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              7F      C       C       1        9.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBIGSFRhh         34      0       0       8        0.0%
BITBIGSFRhlhh        8      0       0       9        0.0%
BITBIGSFRhlhl        1      0       0      10        0.0%
BITBIGSFRhllh        1      0       0      11        0.0%
BITBIGSFRhlll       25      0       0      12        0.0%
BITBIGSFRlh          7      0       0      13        0.0%
BITBIGSFRllh         6      0       0      14        0.0%
BITBIGSFRlll         2      0       0      15        0.0%
ABS                  0      0       0      16        0.0%
BIGRAM             1FF      0       0      17        0.0%
BIGSFR               0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Tue Jan 17 11:51:38 2023

                     l50 0F52                       l47 0F34                       l39 0F96  
                     u50 0F52                       u51 0F4E                       u60 0FAA  
                     u61 0FA2                       u70 0FCC                       u71 0FC8  
                     u80 0FE4                       u81 0FE0                       u68 0FAC  
                     u97 0F26                      l760 0F20                      l762 0F30  
                    l770 0F7A                      l780 0FBA                      l772 0FB2  
                    l764 0F54                      l758 0F14                      l782 0FCC  
                    l774 0FB4                      l766 0F60                      l784 0FD0  
                    l776 0FB6                      l768 0F76                      l786 0FE4  
                    l778 0FB8                      l788 0FEC                      _PR2 000FCB  
                    wreg 000FE8                     _LATB 000F8A                     _main 0F54  
                   start 0000             ___param_bank 000000                    ?_main 0001  
                  _T2CON 000FCA                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISC 000F94                    main@i 0007                    status 000FD8  
        __initialization 0F0E             __end_of_main 1000                   ??_main 0006  
          __activetblptr 000000                   _ADCON1 000FC1                   _ADCON2 000FC0  
                 _CCPR1L 000FBE                   _CCPR2L 000FBB                   isa$std 000001  
       __end_of_wait10ms 0F54               __accesstop 0080  __end_of__initialization 0F0E  
          ___rparam_used 000001           __pcstackCOMRAM 0001              wait10ms@del 0001  
                _CCP1CON 000FBD                  _CCP2CON 000FBA                ?_wait10ms 0001  
                __Hparam 0000                  __Lparam 0000                  __pcinit 0F0E  
                __ramtop 0200                  __ptext0 0F54                  __ptext1 0F14  
   end_of_initialization 0F0E               ??_wait10ms 0003                _PORTCbits 000F82  
    start_initialization 0F0E          main@encoderLeft 0009                 _LATAbits 000F89  
               _LATBbits 000F8A                 __Hrparam 0000                 __Lrparam 0000  
              wait10ms@c 0004                 _wait10ms 0F14                 isa$xinst 000000  
               main@sumL 000B  
